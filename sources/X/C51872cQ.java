package X;

import com.whatsapp.jid.DeviceJid;
import com.whatsapp.jid.Jid;
import com.whatsapp.jid.UserJid;
import java.util.List;
import java.util.Map;

/* renamed from: X.2cQ  reason: invalid class name and case insensitive filesystem */
public class C51872cQ {
    public final int A00;
    public final int A01;
    public final int A02;
    public final long A03;
    public final AnonymousClass1Vt A04;
    public final DeviceJid A05;
    public final Jid A06;
    public final AnonymousClass1ZT A07;
    public final UserJid A08;
    public final C51882cR A09;
    public final C30821d1 A0A;
    public final AnonymousClass2EC A0B;
    public final C28381Vw A0C;
    public final C40111ta A0D;
    public final C28371Vv A0E;
    public final C30641ci A0F;
    public final Integer A0G;
    public final Integer A0H;
    public final String A0I;
    public final String A0J;
    public final String A0K;
    public final String A0L;
    public final String A0M;
    public final String A0N;
    public final List A0O;
    public final List A0P;
    public final Map A0Q;
    public final Map A0R;
    public final Map A0S;
    public final boolean A0T;
    public final boolean A0U;
    public final boolean A0V;

    public C51872cQ(AnonymousClass1Vt r3, DeviceJid deviceJid, Jid jid, AnonymousClass1ZT r6, UserJid userJid, C51882cR r8, C30821d1 r9, AnonymousClass2EC r10, C28381Vw r11, C40111ta r12, C28371Vv r13, C30641ci r14, Integer num, Integer num2, String str, String str2, String str3, String str4, String str5, String str6, List list, List list2, Map map, Map map2, Map map3, int i2, int i3, int i4, long j2, boolean z2, boolean z3, boolean z4) {
        this.A0F = r14;
        this.A0C = r11;
        this.A06 = jid;
        this.A03 = j2;
        this.A02 = i2;
        this.A07 = r6;
        this.A05 = deviceJid;
        this.A08 = userJid;
        this.A0J = str;
        this.A0L = str2;
        this.A0K = str3;
        this.A0B = r10;
        this.A0A = r9;
        this.A0Q = map;
        this.A0S = map2;
        this.A0O = list;
        this.A01 = i3;
        this.A0P = list2;
        this.A00 = i4;
        this.A0G = num;
        this.A04 = r3;
        this.A0R = map3;
        this.A0H = num2;
        this.A0I = str4;
        this.A0N = str5;
        this.A0V = z2;
        this.A0E = r13;
        this.A0D = r12;
        this.A0T = z3;
        this.A0M = str6;
        this.A09 = r8;
        this.A0U = z4;
    }

    public String toString() {
        StringBuilder sb = new StringBuilder("key=");
        sb.append(this.A0C);
        sb.append("; remoteJid=");
        sb.append(this.A06);
        sb.append("; originalTimestamp=");
        sb.append(this.A03);
        sb.append("; retryCount=");
        sb.append(this.A02);
        sb.append("; participant=");
        sb.append(this.A05);
        sb.append("; recipientJid=");
        sb.append(this.A08);
        sb.append("; groupParticipantHash=");
        sb.append(this.A0J);
        sb.append("; broadcastListName=");
        sb.append((String) null);
        sb.append("; messageTypeAttr=");
        sb.append(this.A0L);
        sb.append("; mediaType=");
        sb.append(this.A0K);
        sb.append("; webAttribute=");
        sb.append(this.A0B);
        sb.append("; encryptedMessage=");
        sb.append(this.A0A);
        sb.append("; participantEncryptedMessages=");
        sb.append(this.A0S);
        sb.append("; additionalParticipants=");
        sb.append(this.A0O);
        sb.append("; origflags=");
        sb.append(this.A01);
        sb.append("; editVersion=");
        sb.append(this.A00);
        sb.append("; duration=");
        sb.append(this.A0G);
        sb.append("; paymentTransactionInfo=");
        sb.append(this.A04);
        sb.append("; markInternal=");
        sb.append(false);
        sb.append("; expiration=");
        sb.append(this.A0H);
        sb.append("; category= ");
        sb.append(this.A0I);
        sb.append("; pushPriority= ");
        sb.append(this.A0N);
        sb.append("; isResending= ");
        sb.append(this.A0V);
        sb.append("; privacyMode= ");
        sb.append(this.A0D);
        sb.append("; hideOnDecryptFail= ");
        sb.append(this.A0T);
        sb.append("; nativeFlowName= ");
        sb.append(this.A0M);
        sb.append("; contentBindingData= ");
        sb.append(this.A09);
        sb.append("; isAvatarSticker= ");
        sb.append(this.A0U);
        return sb.toString();
    }
}
